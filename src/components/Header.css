/* src/components/Header.css */

/* --- Base styles (Desktop-first approach, these are for larger screens) --- */
.header {
  background-color: #282c34;
  padding: 2px;
  color: white;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: fixed; /* <-- Make the header fixed */
  top: 0;          /* <-- Stick it to the top */
  left: 0;         /* <-- Stick it to the left */
  width: 100%;     /* <-- Make it span the full width */
  z-index: 1000;   /* <-- Ensure it's above other content (high value) */
  height: var(--header-height); /* Ensure it has a defined height */
  transition: height 0.3s ease, padding 0.3s ease; /* Smooth transition for responsiveness */
}

.header-left-content {
  display: flex;
  align-items: center;
  gap: 15px;
  padding: 20px;
}

.profile-pic {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid #61dafb;
}

.header h1 {
  margin: 0;
  font-size: 2em;
  white-space: nowrap;
}

.menu-toggle {
  display: none; /* Hidden by default on desktop */
  background: none;
  border: none;
  color: white;
  font-size: 2em;
  cursor: pointer;
  padding: 5px 40px;
  z-index: 1001; /* Ensure it's above the header */
}




/* --- MEDIA QUERIES FOR TABLET & SMALLER DESKTOPS (e.g., up to 768px wide) --- */
@media (max-width: 768px) {
  .header {
    flex-wrap: wrap; /* Allow items to wrap to next line */
    justify-content: space-between; /* Keep content spaced, h1/pic left, toggle right */
    padding: 5px 10px;
    height: var(--header-height-mobile);
    position: relative; /* <-- VERY IMPORTANT for absolute positioning of children */ 
  }
.profile-pic {
    width: 30px;
    height: 30px;
  }
  .header h1 {
    font-size: 1.5em; /* Slightly smaller on tablets */
  }

  /* Make sure the left content behaves well */
  .header-left-content {
    flex-grow: 1; /* Allow it to take available space */
    justify-content: flex-start; /* Keep content to the left */
    gap: 10px;
    padding: 4px;
  }
  .menu-toggle {
    display: block; /* Make it VISIBLE */
    position: absolute; /* Position it absolutely within the header */
    right: 20px;       /* 20px from the right edge of the header */
    top: 50%;          /* Vertically center it */
    transform: translateY(-50%); /* Adjust for vertical centering */
    
  }
  
}

/* --- MEDIA QUERIES FOR SMALL MOBILE SCREENS (e.g., up to 480px wide) --- */
@media (max-width: 480px) {
  .header {
    padding: 1px 15px; /* Reduce header padding on very small screens */
    flex-direction: row;
    justify-content: space-between; /* Keep content spaced out */
    align-items: center; /* Vertically center */
    height: var(--header-height-mobile); /* Ensure consistent height */
  }

  .header-left-content {
   flex-shrink: 1;
    flex-basis: auto; /* Let content determine its base width */
    justify-content: flex-start; /* Keep content to the left */
    gap: 8px; /* Slightly smaller gap */
  }

  .profile-pic {
    width: 35px; /* Even smaller profile pic */
    height: 35px;
  }

  .header h1 {
   font-size: 1.4em; /* Further reduce font size for very small screens */
    white-space: nowrap; /* Prevent wrapping if possible, but might overflow */
    overflow: hidden; /* Hide overflow if nowrap causes issues */
    text-overflow: ellipsis; /* Add ellipsis if hidden */
    max-width: 150px; /* Adjust based on typical name length to prevent pushing toggle */
  }

  .menu-toggle {
    display: block; /* Ensure it's still visible */
    /* If using margin-left: auto from 768px, it will continue to work.
       If you used position: absolute previously, ensure it's here too.
       Let's stick with margin-left: auto for simpler flex behavior. */
    margin-left: auto; /* Push to the right */
    font-size: 1.8em; /* Slightly smaller icon if needed */
    flex-shrink: 0; /* Prevent the toggle from shrinking */
  }

  /* The main-nav styles from 768px apply here unless overridden */
}

/* Keyframe animations (keep these) */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeOut {
  from { opacity: 1; transform: translateY(0); }
  to { opacity: 0; transform: translateY(-10px); }
}